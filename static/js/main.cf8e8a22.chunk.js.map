{"version":3,"sources":["actions/listActions.js","actions/cardActions.js","actions/index.js","reducers/ListsReducer.js","reducers/index.js","store/index.js","components/styles.js","components/CardItem.js","components/AddButton.js","components/List.js","components/App.js","serviceWorker.js","index.js"],"names":["addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","DELETE_LIST","DELETE_CARD","Math","floor","random","cardID","initialState","ListsReducer","state","action","index","newState","splice","newList","cards","id","list","find","console","log","newCard","map","String","card","listStart","listEnd","combineReducers","lists","persistedState","serializedState","localStorage","getItem","JSON","parse","e","loadFromLocalStorage","store","createStore","rootReducer","subscribe","stringify","setItem","saveToLocalStorage","getState","ListHeaderWrapper","styled","div","ListHeader","h4","ListContainerB","ListContainerA","AppHeader","h1","DeleteButton","Icon","TitleContainer","CardContainer","DeleteButtonCard","connect","dispatch","handleDeleteCard","deleteCard","provided","draggableProps","dragHandleProps","ref","innerRef","Card","fontSize","onMouseDown","CardContent","Typography","color","gutterBottom","AddButton","formOpen","openForm","setState","closeForm","handleInputChange","target","value","handleAddList","props","handleAddCard","renderAddButton","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","onClick","style","styles","addButtonStyle","opacity","background","renderForm","placeholder","buttonTitle","overflow","fontFamily","wrap","minHeight","minWidth","padding","autoFocus","onBlur","onChange","resize","width","outline","border","formButtonGroup","Button","variant","backgroundColor","marginLeft","cursor","this","Component","fontWeight","textTransform","display","alignItems","height","marginTop","handleDeleteList","deleteList","droppableId","droppableProps","key","App","onDragEnd","result","destination","source","className","direction","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cf8e8a22.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\"\r\n\r\nexport const deleteList = index => {\r\n  return {\r\n    type: CONSTANTS.DELETE_LIST,\r\n    payload: index\r\n  }\r\n}\r\n\r\nexport const addList = (title) => {\r\n  return {\r\n    type: CONSTANTS.ADD_LIST,\r\n    payload: title\r\n  }\r\n}\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return {\r\n    type: CONSTANTS.DRAG_HAPPENED,\r\n    payload: {\r\n      droppableIdStart,\r\n      droppableIdEnd,\r\n      droppableIndexStart,\r\n      droppableIndexEnd,\r\n      draggableId,\r\n      type\r\n    }\r\n  }\r\n}","import { CONSTANTS } from \"../actions\"\r\n\r\nexport const addCard = (listID, text) => {\r\n  return {\r\n    type: CONSTANTS.ADD_CARD,\r\n    payload: {\r\n      text,\r\n      listID\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteCard = (index, listID) => {\r\n  return {\r\n    type: CONSTANTS.DELETE_CARD,\r\n    payload: { index, listID }\r\n  }\r\n}","export * from \"./listActions\"\r\nexport * from \"./cardActions\"\r\n\r\nexport const CONSTANTS = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  DELETE_LIST: \"DELETE_LIST\",\r\n  DELETE_CARD: \"DELETE_CARD\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\"\r\n}","import { CONSTANTS } from \"../actions\"\r\n\r\n// quick workaround to avoid same IDs when creating new lists and cards after refreshing page\r\nlet listID = Math.floor(Math.random() * Math.floor(100000))\r\nlet cardID = Math.floor(Math.random() * Math.floor(100000))\r\n\r\nconst initialState = []\r\n\r\nconst ListsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case CONSTANTS.DELETE_LIST: {\r\n      const index = action.payload\r\n      const newState = state\r\n      newState.splice(index, 1)\r\n      return [...newState]\r\n    }\r\n\r\n    case CONSTANTS.ADD_LIST:\r\n      const newList = {\r\n        title: action.payload,\r\n        cards: [],\r\n        id: listID\r\n      }\r\n      listID += 1\r\n      return [...state, newList]\r\n\r\n    case CONSTANTS.DELETE_CARD: {\r\n\r\n      //Not working correctly - card is deleted from state but page does not re-render\r\n      const { index, listID } = action.payload\r\n      const newState = state\r\n      const list = state.find(list => list.id === listID)\r\n      list.cards.splice(index, 1)\r\n\r\n      //console.log(list)\r\n      console.log(newState)\r\n      return newState\r\n      \r\n    }\r\n    \r\n    case CONSTANTS.ADD_CARD: {\r\n      const newCard = {\r\n        text: action.payload.text,\r\n        id: cardID\r\n      }\r\n      cardID += 1\r\n\r\n      const newState = state.map(list => {\r\n        if (list.id === action.payload.listID) {\r\n          return {\r\n            ...list,\r\n            cards: [...list.cards, newCard]\r\n          }\r\n        } else {\r\n          return list\r\n        }\r\n      })\r\n\r\n      return newState\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED:{\r\n\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        type\r\n      } = action.payload\r\n\r\n      const newState = [...state]\r\n\r\n      if (type === \"list\") {\r\n        \r\n        const list = newState.splice(droppableIndexStart, 1)\r\n        newState.splice(droppableIndexEnd, 0, ...list)\r\n\r\n      } else {\r\n        if (droppableIdStart === droppableIdEnd) {\r\n\r\n          const list = state.find(list => String(list.id) === droppableIdStart)\r\n          const card = list.cards.splice(droppableIndexStart, 1)\r\n          list.cards.splice(droppableIndexEnd, 0, ...card)\r\n\r\n        }\r\n\r\n        if (droppableIdStart !== droppableIdEnd) {\r\n\r\n          const listStart = state.find(list => String(list.id) === droppableIdStart)\r\n          const card = listStart.cards.splice(droppableIndexStart, 1)\r\n          const listEnd = state.find(list => String(list.id) === droppableIdEnd)\r\n          listEnd.cards.splice(droppableIndexEnd, 0, ...card)\r\n\r\n        }\r\n      }\r\n\r\n      return newState\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default ListsReducer","import {combineReducers} from \"redux\"\r\nimport ListsReducer from \"./ListsReducer\"\r\n\r\nexport default combineReducers({\r\n  lists: ListsReducer\r\n})","import {createStore} from \"redux\"\r\nimport rootReducer from \"../reducers\"\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    localStorage.setItem('state', serializedState)\r\n  } catch(e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem('state')\r\n    if (serializedState === null) return undefined\r\n    return JSON.parse(serializedState)\r\n  } catch(e) {\r\n    console.log(e)\r\n    return undefined\r\n  }\r\n}\r\n\r\nconst persistedState = loadFromLocalStorage()\r\nconst store = createStore(rootReducer, persistedState)\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()))\r\n\r\nexport default store","import styled from \"styled-components\"\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nexport const ListHeaderWrapper = styled.div `\r\n  width: 215px;\r\n  word-wrap: break-word;\r\n`\r\n\r\nexport const ListHeader = styled.h4 `\r\n  font-family: Roboto, sans-serif;\r\n  font-size: 22px;\r\n  line-height: 28px;\r\n  margin: 15px 0;\r\n  font-weight: lighter;\r\n`\r\n\r\nexport const ListContainerB = styled.div`\r\n  background-color: #98AFC7;\r\n  font-family: \"Roboto, sans-serif\";\r\n  width: 240px;\r\n  padding: 10px;\r\n  margin-right: 10px;\r\n  height: 100%;\r\n`\r\n\r\nexport const ListContainerA = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nexport const AppHeader = styled.h1 `\r\n  font-family: Roboto, sans-serif;\r\n  font-size: 26px;\r\n  font-weight: lighter;\r\n  color: white;\r\n`\r\n\r\nexport const DeleteButton = styled(Icon)`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  cursor: pointer;\r\n  transition: opacity 0.3s ease-in-out;\r\n  opacity: 0.4;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nexport const TitleContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`\r\nexport const CardContainer = styled.div`\r\n  margin-bottom: 6px; \r\n  word-wrap: break-word;\r\n  position: relative;\r\n  max-width: 100%;\r\n`\r\n\r\nexport const DeleteButtonCard = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  top: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`","import React from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Draggable } from \"react-beautiful-dnd\"\r\nimport { connect } from \"react-redux\"\r\nimport { CardContainer, DeleteButtonCard } from \"./styles\"\r\nimport { deleteCard } from \"../actions\"\r\n\r\n\r\nconst CardItem = ({ text, id, listID, index, dispatch }) => {\r\n\r\n  const handleDeleteCard = e => {\r\n    //console.log(listID + \" \" + id)\r\n    dispatch(deleteCard(index, listID));\r\n  }\r\n\r\n  return (\r\n    <Draggable draggableId={String(id)} index={index}>\r\n      {provided => (\r\n        <CardContainer\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}>\r\n          <Card>\r\n            <DeleteButtonCard fontSize=\"small\" onMouseDown={handleDeleteCard}>\r\n              delete\r\n            </DeleteButtonCard>\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                {text}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </CardContainer>\r\n      )}\r\n    </Draggable >\r\n  )\r\n}\r\n\r\nexport default connect()(CardItem)\r\n","import React, { Component } from 'react'\r\nimport Textarea from \"react-textarea-autosize\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button'\r\nimport { connect } from \"react-redux\"\r\nimport { addList, addCard } from \"../actions\"\r\n\r\nclass AddButton extends Component {\r\n\r\n  state = {\r\n    formOpen: false\r\n  }\r\n\r\n  openForm = () => {\r\n    this.setState({\r\n      formOpen: true\r\n    })\r\n  }\r\n\r\n  closeForm = (e) => {\r\n    this.setState({\r\n      formOpen: false\r\n    })\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    })\r\n  }\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props\r\n    const { text } = this.state\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text:\"\"\r\n      })\r\n      dispatch(addList(text))\r\n    }\r\n    return\r\n  }\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listID } = this.props\r\n    const { text } = this.state\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text:\"\"\r\n      })\r\n      dispatch(addCard(listID, text))\r\n    }\r\n    return\r\n\r\n  }\r\n\r\n  renderAddButton = () => {\r\n    const { list } = this.props\r\n    const buttonText = list ? \"add list\" : \"add card\"\r\n    const buttonTextOpacity = list ? 1 : 0.5\r\n    const buttonTextColor = list ? \"white\" : \"inherit\"\r\n    const buttonTextBackground = list ? \"rgba(0,0,0,.2)\" : \"inherit\"\r\n\r\n    return (\r\n      <div\r\n        onClick={this.openForm}\r\n        style={{\r\n          ...styles.addButtonStyle,\r\n          opacity: buttonTextOpacity,\r\n          color: buttonTextColor,\r\n          background: buttonTextBackground\r\n        }}>\r\n        <Icon>add</Icon>\r\n        <p>{buttonText}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderForm = () => {\r\n    const { list } = this.props\r\n    const placeholder = list ? \"list title...\" : \"card text...\"\r\n    const buttonTitle = list ? \"Add List\" : \"Add Card\"\r\n\r\n    return <div>\r\n      <Card\r\n        style={{\r\n          overflow: \"visible\",\r\n          fontFamily: \"Roboto, sans-serif\",\r\n          wrap: \"hard\",\r\n          minHeight: 80,\r\n          minWidth: 232,\r\n          padding: 4\r\n        }}\r\n      >\r\n        <Textarea\r\n          placeholder={placeholder}\r\n          autoFocus\r\n          onBlur={this.closeForm}\r\n          value={this.state.text}\r\n          onChange={this.handleInputChange}\r\n          style={{\r\n            overflow: \"hidden\",\r\n            resize: \"none\",\r\n            width: \"100%\",\r\n            outline: \"none\",\r\n            border: \"none\"\r\n          }}\r\n        />\r\n      </Card>\r\n      <div style={styles.formButtonGroup}>\r\n        <Button\r\n          onMouseDown={ list ? this.handleAddList : this.handleAddCard}\r\n          variant=\"contained\"\r\n          style={{ color: \"white\", backgroundColor: \"#C7B097\" }}\r\n        >\r\n          {buttonTitle}\r\n        </Button>\r\n        <Icon style={{ marginLeft: 8, cursor: \"pointer\" }}>close</Icon>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  render() {\r\n    return this.state.formOpen === true ? this.renderForm() : this.renderAddButton()\r\n\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  addButtonStyle: {\r\n    fontFamily: \"Roboto, sans-serif\",\r\n    fontWeight: \"bold\",\r\n    textTransform: \"uppercase\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    height: 36,\r\n    minWidth: 240\r\n  },\r\n  formButtonGroup: {\r\n    marginTop: 8,\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n}\r\n\r\nexport default connect()(AddButton)\r\n","import React from 'react'\r\nimport CardItem from './CardItem.js'\r\nimport AddButton from \"./AddButton\"\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\"\r\nimport { ListHeader, ListContainerB, DeleteButton, TitleContainer, ListHeaderWrapper } from \"./styles\"\r\nimport { deleteList } from \"../actions\"\r\nimport { connect } from \"react-redux\"\r\n\r\n\r\nconst List = ({ title, cards, listID, index, dispatch }) => {\r\n\r\n  const handleDeleteList = () => {\r\n    dispatch(deleteList(index))\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={String(listID)} index={index}>\r\n      {provided => (\r\n        <ListContainerB {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n          <Droppable droppableId={String(listID)} type=\"card\">\r\n            {provided => (\r\n              <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                <TitleContainer>\r\n                  <ListHeaderWrapper>\r\n                    <ListHeader>{title}</ListHeader>\r\n                  </ListHeaderWrapper>\r\n                  <DeleteButton onClick={handleDeleteList}>\r\n                    delete\r\n                  </DeleteButton>\r\n                </TitleContainer>\r\n                {cards.map((card, index) => (\r\n                  <CardItem text={card.text} index={index} key={card.id} id={card.id} listID={listID}/>\r\n                ))}\r\n                {provided.placeholder}\r\n                <AddButton listID={listID} />\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </ListContainerB>\r\n      )}\r\n    </Draggable >\r\n\r\n  )\r\n}\r\n\r\nexport default connect()(List)","import React, { Component } from 'react';\nimport List from './List'\nimport { connect } from \"react-redux\"\nimport AddButton from \"./AddButton\"\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\"\nimport { sort } from \"../actions\"\nimport { ListContainerA, AppHeader } from \"./styles\"\n\n\nclass App extends Component {\n\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result\n\n    if (!destination) {\n      return\n    }\n\n    this.props.dispatch(sort(\n      source.droppableId,\n      destination.droppableId,\n      source.index,\n      destination.index,\n      draggableId,\n      type\n    ))\n  }\n\n  render() {\n    const { lists } = this.props\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div className=\"App\">\n          <AppHeader>List Creator</AppHeader>\n          <Droppable droppableId=\"lists-wrapper\" direction=\"horizontal\" type=\"list\">\n            {provided => (\n              <ListContainerA {...provided.droppableProps} ref={provided.innerRef}>\n                {lists.map((list, index) => (\n                  <List listID={list.id} title={list.title} cards={list.cards} key={list.id} index={index}/>\n                ))}\n                {provided.placeholder}\n                <AddButton list />\n              </ListContainerA>\n            )}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n})\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}